
// 'number' + 3 + 3 -> 'number33'
// Конкатенація стрінга 'number' з двома числами.
console.log('number' + 3 + 3);


// null + 3 -> 3
// Додавання null і числа 3, де null конвертовано в 0.
console.log(null + 3);


// 5 && "qwerty" -> 'qwerty'
// Логічне множення для числа 5 та стрінга "qwerty". Буде повертатися останнє істинне значення.
console.log(5 && "qwerty");


// +'40' + +'2' + "hillel" -> 42hillel
// Приведення до типу number +'40' та +'2', потім додавання 40+2 і конкатенація результату зі стрінгом "hillel".
console.log(+'40' + +'2' + "hillel");


// '10' - 5 === 6 -> false
// Приведення стринга '10' до числа, потім віднімання числа 5 та порівняння результату з числом 6.
// Так як 5 не дорівнює 6, то результатом буде false
console.log('10' - 5 === 6);


// true + false -> 1
// Додавання значень true і false, де true конвертується в 1, false - в 0.
console.log(true + false);


// '4px' - 3 -> NaN
// Стрінг '4px' конвертується в NaN. Віднімання числа 3 від стрінга '4px' дорівнює NaN.
console.log('4px' - 3);


// '4' - 3 -> 1
// Стрінг '4' конвертується в число. 
console.log('4' - 3);


// '6' + 3 ** 0 -> '61'
// Число 3 в ступені 0 дорівнює 1
// Потім йде конкатенація стрінга '6' з результатом 
console.log('6' + 3 ** 0);


// 12 / '6' -> 2
// Ділення числа 12 на стрінг '6', де стрінг '6' конвертується в число.
console.log(12 / '6');


// '10' + (5 === 6) -> '10false'
// Порівняння чисел 5 і 6 дорівнює false, далі конкатенація рядка '10' з результатом.
console.log('10' + (5 === 6));


// null == '' -> false
// Порожній стрінг конвертується в false і далі порівнюється з null
// null може дорівнюватись лише null та undefined, тому результатом порівняння буде false
console.log(null == '');


// 3 ** (9 / 3) -> 27
// Ділення 9 на 3 дорівнює 3
// Число 3 в ступені 3 дорівнює 27
console.log(3 ** (9 / 3));


// !!'false' == !!'true' -> true
// 'false' -  не порожній стрінг і дорівнює true.
// Далі ! (true) повертає false. Потім ! (false) повертає true.
// По анології !!'true' в результіті буде повертати true.
// Порівняння true == true повертає true 
console.log(!!'false' == !!'true');


// 0 || '0' && 1 -> 1
// Спочатку виконується логічне 'І' '0' && 1, де стринг '0' дорівнює true, тому вираз повертає 1. Результатом 1 && 1 буде 1.
// Потім виконується логічне 'АБО' 0 || 1, що повертає 1
console.log(0 || '0' && 1);

// (+null == false) < 1 -> false
// +null приводиться до number і дорівнює 0, false також приводиться до 0, результатом порівняння 0 == 0 буде true
// Далі true приводиться до 1 і виконується порівняння 1 < 1, результатом чого буде false
console.log((+null == false) < 1);

// false && true || true -> true
// Спочатку виконується логічне 'І' для false && true, що буде дорівнювати  false
// Потім виконується логічне 'АБО' для false || true, де результатом буде true
console.log(false && true || true);

// false && (false || true);
// Спочатку виконується логічне 'АБО' для false || true, де результатом буде true 
// Потім виконується логічне 'І' для false && true, що буде дорівнювати  false
console.log(false && (false || true));

// (+null == false) < 1 ** 5;
// +null приводиться до number і дорівнює 0, false також приводиться до 0, результатом порівняння 0 == 0 буде true
// Потім 1 підводиться до степенню 5, результатом чого буде 1
// Далі true приводиться до 1 і виконується порівняння 1 < 1, результатом чого буде false
console.log((+null == false) < 1 ** 5);